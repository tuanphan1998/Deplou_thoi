{"version":3,"sources":["../node_modules/encoding/lib sync","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","translate","engine","key","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","target","files","uploads","hasOwnProperty","upload","push","URL","createObjectURL","setState","generateText","state","i","length","Tesseract","recognize","lang","cam","catch","err","console","error","then","result","confidence","text","to","text2","log","patterns","match","concat","documents","pattern","changso","ngoaiLe","changeState2","value","buttonEnable","react_default","a","createElement","type","className","onClick","disabled","titleTool","Fragment","ListenerLangNghe","goc","dist_default","loading","spinnerColor","logoSrc","textColor","map","index","role","src","width","alt","_this2","onChange","multiple","data-toggle","data-target","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","name","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c9972b5e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 152;","import React, { Component } from 'react';\nimport './App.css';\nimport Tesseract from \"tesseract.js\";\nimport translate from 'translate';  \nimport LoadingScreen from 'react-loading-screen';\ntranslate.engine = 'google';\ntranslate.key = 'AIzaSyDOzkQB5bI79zKBSiHGH8JRjlI6sM-cBwc';\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      uploads: [],\n      patterns: [],\n      documents: [],\n      changso : 0,\n      cam : \"eng\"\n    };\n  }\n  handleChange = (event) => {\n    if (event.target.files[0]) {\n      var uploads = []\n      for (var key in event.target.files) {\n        if (!event.target.files.hasOwnProperty(key)) continue;\n        let upload = event.target.files[key]\n        uploads.push(URL.createObjectURL(upload))\n      }\n      this.setState({\n        uploads: uploads\n      })\n    } else {\n      this.setState({\n        uploads: []\n      })\n    }\n  }\n   generateText =  () => {\n      try\n      {\n        let uploads = this.state.uploads\n  \n        for(var i = 0; i < uploads.length; i++) {\n          Tesseract.recognize(uploads[i], {\n            lang: this.state.cam\n          })\n          .catch(err => {\n            console.error(err)\n          })\n          .then(result => {\n            // Get Confidence score\n            let confidence = result.confidence\n      \n            // Get full output\n            let text = result.text\n            translate(result.text, {  to: 'vi' }).then(text2 => {\n              console.log(text);  \n                // Get codes\n            let pattern = /\\b\\w{10,10}\\b/g\n            let patterns = result.text.match(pattern);\n      \n            // Update state\n            this.setState({ \n              patterns: this.state.patterns.concat(patterns),\n              documents: this.state.documents.concat({\n                pattern: patterns,\n                text: text,\n                text2 : text2,\n                confidence: confidence\n              })\n            })\n            });\n            \n          \n          })\n        }\n        this.setState({changso : 1});\n      }\n      catch(error)\n      {\n        console.log(error);\n      }\n  }\n\n\n  ngoaiLe = () => {\n    try {\n      this.generateText();\n    } catch (error) {\n      // ...'\n      console.log(error);\n    }\n  }\n\n\n  changeState2 = (event) => {\n    const value = event.target.value;\n    this.setState({\n      cam : value\n    });\n     \n  }\n\n  buttonEnable = () => {\n    if(this.state.uploads[0])\n    {\n      return(\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=>this.ngoaiLe()} disabled={false}>😅 Phân tích</button>\n      )\n    }\n    else\n    {\n      return(\n        <button type=\"button\" className=\"btn btn-primary\" onClick={()=>this.ngoaiLe()} disabled={true}> 🤗Phân tích</button>\n      )\n    }\n  }\n\n  titleTool = () => {\n    if(this.state.uploads[0])\n    {\n      return(\n        <></>\n      )\n    }\n    else\n    {\n      return(\n        <h5> \"Công cụ chuyển đổi hình ảnh thành văn bản . Kèm theo tính năng dịch phát triển bởi Phan Kim Tuân\"</h5>\n      )\n    }\n  }\n\n  ListenerLangNghe = () => {\n    if(this.state.changso === 0)\n    {\n      return(<></>)\n    }\n    else if(this.state.changso === 1)\n    {\n      let temp = this.state.documents.length;\n      let goc = true;\n      if(temp > 0)\n      {\n        goc = false;\n      }\n      console.log(goc);\n      return(\n        <>\n        <LoadingScreen loading={goc}  spinnerColor='#9ee5f8' logoSrc=\"https://i.pinimg.com/originals/c5/98/77/c5987751bddee68c4ddb8d069b515e65.gif\" textColor='#676767'  text='Chờ tí nha'>\n        {\n                 this.state.documents.map((value, index) => {\n                  \n                  try\n                  {\n                    return (\n\n                      <div  key={index} className=\"alert alert-success\" role=\"alert\">\n                        <div className=\"results__result\">\n                        <div className=\"results__result__image\">\n                          <img src={this.state.uploads[index]} width=\"250px\" alt={value.pattern.map((pattern) => { return pattern + ', ' })} />\n                        </div>\n                        <div className=\"results__result__info\">\n                          <div className=\"results__result__info__codes\">\n                          <small><strong>Tỉ lệ chính xác đạt:</strong> {value.confidence}{\"%\"}</small>\n                          </div>\n                          <div className=\"results__result__info__codes\">\n                            <small><strong>Dạng tài liệu đầu ra:</strong> {value.pattern.map((pattern) => { return pattern + ', ' })}</small>\n                          </div>\n                          <div className=\"results__result__info__text\">\n                            <small><strong>Văn bản đầu ra:</strong> {value.text}</small>\n                          </div>\n                          <div className=\"results__result__info__text\">\n                            <small><strong>Văn bản được dịch:</strong>{value.text2}</small>\n                          </div>\n                        \n                        </div>\n                      </div>\n                      <small><strong>HÌNH ẢNH SAU SẼ KHÔNG LOAD LẠI</strong></small>\n                      </div>\n                    )\n                  }\n                  catch(error)\n                  {\n                    console.log(\"da gay ra loi\");\n                  }\n                }) \n          }\n        </LoadingScreen>\n        </>\n      )\n    }\n  }\n\n  render() {\n    return (\n\n\n\n\n      <div className=\"container\">\n      <div className=\"row mbr-justify-content-center mt-5\">\n        {this.titleTool()}\n        <div className=\"col-lg-6 mbr-col-md-6\">\n\n        { /* File uploader */ }\n        <section>\n          <label className=\"fileUploaderContainer\">\n            Drop hình ảnh vào viền này\n            <input type=\"file\" id=\"fileUploader\" onChange={this.handleChange} multiple />\n          </label>\n\n          <div>\n            { this.state.uploads.map((value, index) => {\n              return <img key={index} src={value} width=\"400px\" alt=\"demo1\" />\n            }) }\n          </div>\n          <div className=\"btn-group btn-group-toggle\">\n            {this.buttonEnable()}\n          <button type=\"button\" className=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\"> 😁 Lựa chọn ngôn ngữ trong hình ảnh  DEFAULT : ENG</button>\n           {/* Ngôn ngữ */}\n        <div className=\"modal fade\" id=\"exampleModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Các bạn chọn ngôn ngữ của hình ảnh</h5>\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">×</span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                  <select className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(event)=>this.changeState2(event)} name=\"cam\">\n                      <option value={\"deu\"}>Tiếng Đức</option>\n                      <option value={\"deu-f\"}>Tiếng Đước - Fraktur</option>\n                      <option value={\"eng\"}>Tiếng Anh</option>\n                      <option value={\"eus\"}>Tiếng Basque</option>\n                      <option value={\"fra\"}>Tiếng pháp</option>\n                      <option value={\"ita\"}>Tiếng ý</option>\n                      <option value={\"nld\"}>Tiếng Hà Lan - Flemish</option>\n                      <option value={\"por\"}>Tiếng Bồ Đào Nha</option>\n                      <option value={\"spa\"}>Tiếng Tây Ban Nha</option>\n                      <option value={\"vie\"}>Tiếng Việt</option>\n                    </select>\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Lưu lại</button>\n              </div>\n            </div>\n          </div>\n        </div>\n            \n          </div>\n        </section>\n        \n\n\n            \n        </div>\n        <div className=\"col-lg-6 mbr-col-md-6\">\n\n\n        { /* Results */ }\n\n\n       \n\n\n\n<section className=\"results\">\n      {/* {Load Time} */}\n      {this.ListenerLangNghe()}\n</section>\n       </div>\n    </div>\n      </div>\n    )\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}